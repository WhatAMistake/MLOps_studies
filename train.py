# -*- coding: utf-8 -*-
"""train.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G_7Gn7HE5qi4Tw94yj6V_TiLB4D0Zaco
"""

import pandas as pd
import matplotlib
import matplotlib.pyplot as plt
from sklearn.metrics import accuracy_score

df = pd.read_csv('/content/Dataset-Mental-Disorders.csv')

df.head()

column_list = df.columns.values.tolist()
for column_name in column_list:
    print(column_name,":",df[column_name].unique())

df.value_counts(normalize=True)

df['Patient Number'] = df['Patient Number'].str[8:].astype(int)

d = {'Seldom': 1, 'Sometimes': 2, 'Usually': 3, 'Most-Often': 4}

df['Sadness'] = df['Sadness'].replace(d).astype(int)
df['Euphoric'] = df['Euphoric'].replace(d).astype(int)
df['Exhausted'] = df['Exhausted'].replace(d).astype(int)
df['Sleep dissorder'] = df['Sleep dissorder'].replace(d).astype(int)
df['Suicidal thoughts'] = df['Suicidal thoughts'].replace('YES ', 'YES')

d = {'3 From 10': 3, '4 From 10': 4, '6 From 10': 6, '5 From 10': 5, '7 From 10': 7, '8 From 10': 8,
 '9 From 10': 9, '2 From 10': 2, '1 From 10': 1}

df['Sexual Activity'] = df['Sexual Activity'].replace(d).astype(int)
df['Concentration'] = df['Concentration'].replace(d).astype(int)
df['Optimisim'] = df['Optimisim'].replace(d).astype(int)

yes_no_columns = ['Mood Swing', 'Suicidal thoughts', 'Anorxia', 'Authority Respect', 'Try-Explanation',
                  'Aggressive Response', 'Ignore & Move-On', 'Nervous Break-down',
                  'Admit Mistakes', 'Overthinking']
df[yes_no_columns] = df[yes_no_columns].replace({'YES': 1, 'NO': 0})

df[yes_no_columns] = df[yes_no_columns].apply(pd.to_numeric, errors='coerce')
df.reset_index(drop=True, inplace=True)

d = {'Bipolar Type-1': 1, 'Bipolar Type-2': 2, 'Depression': 3, 'Normal': 4}

df['Expert Diagnose'] = df['Expert Diagnose'].replace(d).astype(int)

df.describe()

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.losses import CategoricalCrossentropy
from tensorflow.keras.metrics import AUC
from tensorflow.keras.callbacks import EarlyStopping
import tensorflow.keras.utils

import numpy as np
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

X = df.drop(columns='Expert Diagnose').values
Y = df['Expert Diagnose'].values
Y = le.fit_transform(Y)
Y = tensorflow.keras.utils.to_categorical(Y, num_classes=4)

earlystopper = EarlyStopping(monitor='val_loss', patience=5)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, random_state=42)

model = Sequential()
model.add(Dense(64, activation='relu', input_shape=(X.shape[1],)))
model.add(Dense(32, activation='relu'))
model.add(Dense(4, activation='sigmoid'))

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['acc', AUC()])

model.fit(X, Y, epochs=50, batch_size=10, validation_split=0.2, callbacks=[earlystopper])

accuracy = model.evaluate(X_test, Y_test)
print("Accuracy:", accuracy * 100, "%")

model.save('my_trained_model.keras')
